{"version":3,"sources":["components/Home/index.js","components/MessageList/index.js","components/utils/constans.js","components/Form/FormView.js","components/Form/FormContainer.js","services/firebase.js","store/chats/actions.js","store/chats/selectors.js","components/ChatItem/ChatItenView.js","store/messages/actions.js","components/ChatItem/ChatItemContainer.js","components/FormAddChat/index.js","components/ChstList/index.js","components/Chats/index.js","components/Profile/index.js","components/utils/ThemeContext.js","store/profile/action.js","store/profile/selectors.js","components/ProfileTop/index.js","store/articles/actions.js","store/articles/selectors.js","components/News/index.js","store/weather/actions.js","store/weather/selector.js","components/Weather/index.js","components/PrivateRoute/index.js","components/PublicRoute/index.js","store/home/actions.js","components/Routes/index.js","store/chats/reducer.js","store/messages/reducer.js","store/profile/reducer.js","store/articles/reducer.js","store/weather/reducer.js","store/home/reducer.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","onLogin","onSignUp","useState","login","setLogin","pass","setPass","onSubmit","e","preventDefault","type","value","onChange","target","MessageList","text","AUTHORS","REQUEST_STATUS","FormView","inputRf","onClickChange","FormControl","className","TextField","autoFocus","label","inputRef","Button","variant","size","onClick","FormContainer","useRef","messageAdd","setMessageAdd","handelChange","useCallback","event","current","focus","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getDatabase","signUp","email","a","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","firbaseSignOut","ADD_CHAT","DELETE_CHAT","SET_CHAT","initChats","dispatch","itemsDbRef","ref","onValue","snapshot","items","data","val","Object","values","payload","deleteChats","id","selectChats","state","selectChatsLength","length","selectFerstChatId","ChatItemView","name","onDelete","ListItem","to","ADD_MESSAGE","DELETE_MESSAGE","SET_MESSAGES","initMessages","messagesListDbRef","addMessageFb","author","itemId","newId","Date","now","set","ChatItemContainer","item","useParams","ferstChatId","useSelector","chatsLength","history","useHistory","useDispatch","useEffect","remove","deleteMessageFb","push","FormAddChat","setValue","disabled","ChartList","List","map","i","Chats","Component","messagesList","chatExists","find","sendMessage","handelAddMessage","message","ThemeContext","React","createContext","theme","changeTheme","TOOGLE_SHOW_NAME","CHANGE_NAME","CHECK_BOX","ON_AUTH","ON_LOGOUT","onLogout","user","console","log","selectProfileName","selectProfileShowName","showName","ProfileTop","onLogaut","useContext","style","color","ThemeProfile","rel","href","src","props","GET_ARTICLES_PENDING","GET_ARTICLES_SUCCESS","GET_ARTICLES_FAILURE","selectArticlesLoading","news","request","status","selectArticles","list","selectArticlesError","error","News","articles","loading","reload","fetch","response","ok","Error","json","result","CircularProgress","art","title","GET_WEATHER_LOADING","GET_WEATHER_SUCCESS","GET_WEATHER_FAILURE","getWeather","then","catch","selectWeatherLoading","tempo","selectWeather","selectWeatherError","Weather","temps","LinearProgress","description","temperature","wind","PrivateRoute","authed","PublicRoute","HANDEL_LOGIN","CHANGE_STATUS","ERROR_LOGIN","authUser","setAuthed","handleLoginFb","handelLodin","Routes","onAuthStateChanged","handleLogin","handleSignUp","path","exact","static","initalState","initialState","checkBox","persistConfig","key","storage","blacklist","rootReducer","combineReducers","profile","newChats","filter","newChatMessages","newMessages","home","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","App","setTheme","prevTheme","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAEaA,EAAO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC9B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAuBA,OACE,qCACE,6BAAON,EAAU,QAAU,WAC3B,uBAAMO,SAhBW,SAACC,GACpBA,EAAEC,iBAEFL,EAAS,IACTE,EAAQ,IAEFN,EACJA,EAAQG,EAAOE,GAEfJ,EAASE,EAAOE,IAOhB,UACE,uBAAOK,KAAK,OAAOC,MAAOR,EAAOS,SAzBb,SAACJ,GACzBJ,EAASI,EAAEK,OAAOF,UAyBd,uBAAOD,KAAK,WAAWC,MAAON,EAAMO,SAtBjB,SAACJ,GACxBF,EAAQE,EAAEK,OAAOF,UAsBb,uBAAOD,KAAK,kBC/BPI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,8BAAMA,KCFlCC,G,cACJ,SAMIC,EACL,OADKA,EAEF,UAFEA,EAGF,UAHEA,EAIF,U,2BCLEC,EAAW,SAAC,GAA8C,IAA7CN,EAA4C,EAA5CA,SAAUO,EAAkC,EAAlCA,QAASJ,EAAyB,EAAzBA,KAAMK,EAAmB,EAAnBA,cAEjD,OACE,eAACC,EAAA,EAAD,CACAC,UAAU,kBACVf,SAAUK,EAFV,UAGE,cAACW,EAAA,EAAD,CAAWC,WAAS,EACpBC,MAAM,UACNC,SAAUP,EACVG,UAAU,mBACVX,MAAOI,EACPH,SAAUQ,IACV,cAACO,EAAA,EAAD,CACAjB,KAAK,SACLkB,QAAQ,WACRC,KAAK,QACLC,QAASlB,EACTU,UAAU,iBALV,qBCdOS,EAAgB,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SACxBmB,EAAWM,iBAAO,MAExB,EAAoC9B,mBAAS,IAA7C,mBAAO+B,EAAP,KAAmBC,EAAnB,KAEMC,EAAeC,uBAAY,SAACC,GAChCH,EAAcG,EAAMxB,OAAOF,SAC1B,IASH,OACE,cAAC,EAAD,CACEC,SATiB,SAACJ,GACpBA,EAAEC,iBACFF,EAAS0B,GAETP,EAASY,QAAQC,SAMfpB,QAASO,EACTX,KAAMkB,EAAWlB,KACjBK,cAAee,K,yCCArBK,YAZuB,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YACE,+EACFC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAMF,IAAMC,EAAOC,cACPC,EAAKC,cAELC,EAAM,uCAAG,WAAOC,EAAOhD,GAAd,SAAAiD,EAAA,sEACdC,YAA+BP,EAAMK,EAAOhD,GAD9B,2CAAH,wDAINF,EAAK,uCAAG,WAAOkD,EAAOhD,GAAd,SAAAiD,EAAA,sEACbE,YAA2BR,EAAMK,EAAOhD,GAD3B,2CAAH,wDAILoD,EAAO,uCAAG,sBAAAH,EAAA,sEACfI,YAAeV,GADA,2CAAH,qDCnCPW,EAAW,kBACXC,EAAc,qBACdC,EAAW,kBAiBXC,EAAY,kBAAM,SAACC,GAC9B,IAAMC,EAAaC,YAAIf,EAAI,SAC3BgB,YAAQF,GAAY,SAACG,GACnB,IARoBC,EAQdC,EAAOF,EAASG,MACtBP,GAToBK,EASHG,OAAOC,OAAOH,GAAQ,IATR,CACjC3D,KAAMmD,EACNY,QAASL,UAsBEM,EAAc,kBAAM,SAACX,GAChC,IAAMC,EAAaC,YAAIf,EAAI,SAC3BgB,YAAQF,GAAY,SAACG,GACnB,IAhCuBQ,EAgCjBN,EAAOF,EAASG,MACtBP,GAjCuBY,EAiCHJ,OAAOC,OAAOH,GAAQ,IAjCX,CACjC3D,KAAMkD,EACNa,QAASE,UCdEC,EAAc,SAACC,GAAD,OAAWA,EAAMT,MAAMA,OACrCU,EAAoB,SAACD,GAAD,OAAWA,EAAMT,MAAMA,MAAMW,QACjDC,EAAoB,SAACH,GAAD,uBAAWA,EAAMT,MAAMA,aAAvB,aAAW,EAAoB,GAAGO,I,kCCKtDM,EAAe,SAAC,GAA4B,IAA1BN,EAAyB,EAAzBA,GAAIO,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACvC,OACE,eAACC,EAAA,EAAD,CAAU9D,UAAU,WAApB,UACE,cAAC,IAAD,CAAM+D,GAAE,iBAAYV,GAApB,SAA2BO,IAC3B,cAAC,IAAD,CAAY5D,UAAU,UAAUQ,QAASqD,QCPlCG,EAAc,yBACdC,EAAiB,4BACjBC,EAAe,0BAoCfC,EAAe,kBAAM,SAAC1B,GACjC,IAAM2B,EAAoBzB,YAAIf,EAAI,gBAClCgB,YAAQwB,GAAmB,SAACvB,GAC1B,IAAME,EAAOF,EAASG,MACtBP,EArB0C,CAC5CrD,KAAM8E,EACNf,QAmB2BJ,GAAQ,UAIxBsB,EAAe,SAAC5E,EAAM6E,EAAQC,GAAf,OAA0B,SAAC9B,GACrD,IAAM+B,EAAK,uBAAmBC,KAAKC,OAC7BN,EAAoBzB,YAAIf,EAAD,uBAAqB2C,EAArB,YAA+BC,IAC5DG,YAAIP,EAAmB,CACrBE,SACA7E,OACA4D,GAAImB,MCxCKI,GAAoB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1BN,EAAWO,cAAXP,OACFQ,EAAcC,YAAYtB,GAC1BuB,EAAcD,YAAYxB,GAE1B0B,EAAUC,cAEV1C,EAAW2C,cAEjBC,qBAAU,WACR5C,EAASW,OACR,IAiBH,OAAO,cAAC,EAAD,CAAcQ,KAAMiB,EAAKjB,KAAMP,GAAIwB,EAAKxB,GAAIQ,SAf9B,WJoBK,IAACR,EInBzBZ,GJmByBY,EInBHwB,EAAKxB,GJmBK,WAClC,IAAMX,EAAaC,YAAIf,EAAD,gBAAcyB,IAEpCiC,YAAO5C,EAAY,CACjBW,UItBAZ,ED6B2B,SAAC8B,GAAD,OAAY,WACzC,IAAM7B,EAAaC,YAAIf,EAAD,uBAAqB2C,IAE3Ce,YAAO5C,EAAY,CACjB6B,YCjCSgB,CAAgBhB,IAErBA,IAAWM,EAAKxB,KAIC,KAAhB4B,EACHC,EAAQM,KAAR,iBAAuBT,IAEvBG,EAAQM,KAAR,eCjCOC,GAAc,WACzB,IAAMhD,EAAW2C,cACjB,EAA0BxG,mBAAS,IAAnC,mBAAOS,EAAP,KAAcqG,EAAd,KAaA,OACE,uBAAMzG,SARa,SAACC,GLeC,IAAC0E,EKdtB1E,EAAEC,iBAEFsD,GLYsBmB,EKZHvE,ELYY,WACjC,IAAMmF,EAAK,gBAAYC,KAAKC,OAEtBhC,EAAaC,YAAIf,EAAD,gBAAc4C,IAEpCG,YAAIjC,EAAY,CACdW,GAAImB,EACJZ,YKlBA8B,EAAS,KAIT,UACE,cAACzF,EAAA,EAAD,CACEC,WAAS,EACTb,MAAOA,EACPc,MAAM,WACNf,KAAK,OACLE,SAlBe,SAACJ,GACpBwG,EAASxG,EAAEK,OAAOF,UAmBhB,cAACgB,EAAA,EAAD,CAAQC,QAAQ,WAAWqF,UAAWtG,EAAOD,KAAK,SAAlD,0BCxBOwG,GAAY,SAAC,GAAgB,IAAdrB,EAAa,EAAbA,OACpBzB,EAAQkC,YAAY1B,GAE1B,OACE,mCACE,eAACuC,EAAA,EAAD,YACI/C,GAAS,IAAIgD,KAAI,SAACjB,EAAMkB,GAAP,OACjB,mCACE,cAAC,GAAD,CACElB,KAAMA,EACNN,OAAQA,EAERlB,GAAIwB,EAAKxB,IADJwB,EAAKxB,SAKhB,cAAC,GAAD,UCuCO2C,ICpDMC,GDoDND,GA/Cf,WACE,IAAQzB,EAAWO,cAAXP,OACF9B,EAAW2C,cAEXc,EAAelB,aAAY,SAACzB,GAAD,OAAWA,EAAM2C,aAAaA,gBAEzDC,EAAanB,aACjB,SAAC3B,GAAD,OAAQ,SAACE,GAAD,QAAaA,EAAMT,MAAMA,MAAMsD,MAAK,SAACvB,GAAD,OAAUxB,IAAOwB,EAAKxB,UAGpEgC,qBAAU,WACR5C,EAASD,KACTC,EAAS0B,OACR,IAEH,IAAMkC,EAAcvF,uBAClB,SAACrB,EAAM6E,GACL7B,EAAS4B,EAAa5E,EAAM6E,EAAQC,IACtB,MAAVA,GACFe,YAAOjB,OAGX,CAACE,IAGG+B,EAAmBxF,uBACvB,SAACrB,GACC4G,EAAY5G,EAAMC,KAEpB,CAAC2G,IAGH,OACE,sBAAKrG,UAAU,cAAf,UACE,cAAC,GAAD,CAAWuE,OAAQA,MAChBA,GAAU4B,GACX,qCACE,cAAC,EAAD,CAAelH,SAAUqH,KACvBrD,OAAOC,OAAOgD,EAAa3B,IAAW,KAAO,IAAIuB,KAAI,SAACS,GAAD,OACrD,cAAC,EAAD,CAA8B9G,KAAM8G,EAAQ9G,MAA1B8G,EAAQlD,c,SEpDzBmD,GAAeC,IAAMC,cAAc,CAACC,MAAM,QAASC,YAAa,eCEhEC,GAAmB,4BACnBC,GAAc,uBACdC,GAAY,qBACZC,GAAU,mBACVC,GAAY,qBAsBZC,GAAW,SAACC,GACpBA,EACDhF,IAEAiF,QAAQC,IAAI,SClCHC,GAAoB,SAAC/D,GAAD,OAAWA,EAAMK,MAErC2D,GAAwB,SAAChE,GAAD,OAAWA,EAAMiE,UCOzCC,GAAa,SAAC,GAAiB,EAAfC,SAAgB,IACrCF,EAAWxC,YAAYuC,IACvB3D,EAAOoB,YAAYsC,IACnBX,EAAQgB,qBAAWnB,IAEzB,OACE,qCACE,oBAAIoB,MAAO,CAAEC,MAAuB,UAAhBlB,EAAMA,MAAoB,QAAU,QAAxD,qCAGCa,GAAY,8BAAM5D,QJuBZkE,I,OAhCQ7B,GAQE,SAAC,GAAe,IAAbU,EAAY,EAAZA,MAClBlE,EAAW2C,cAMjB,OACE,qCACE,sBACE2C,IAAI,aACJC,KAAK,6EAGP,wBAAQhI,UAAU,SAASQ,QAXV,WACnBiC,EAASyE,KAUP,oBAGA,cAAC,GAAD,CAAYP,MAAOA,IAEnB,qBAAK3G,UAAU,kBAAkBiI,IAAI,kCA1BlC,WAAc,IACnB,IAAMtB,EAAQgB,qBAAWnB,IADN,mBAAV0B,EAAU,yBAAVA,EAAU,gBAGnB,OAAO,cAACjC,GAAD,6BAAeiC,GAAf,IAAsBvB,MAAOA,O,mBKZ3BwB,GAAuB,wBACvBC,GAAuB,wBACvBC,GAAuB,wBCFvBC,GAAwB,SAAC/E,GAAD,OACnCA,EAAMgF,KAAKC,QAAQC,SAAW9I,GACnB+I,GAAiB,SAACnF,GAAD,OAAWA,EAAMgF,KAAKI,MACvCC,GAAsB,SAACrF,GAAD,OAAWA,EAAMgF,KAAKC,QAAQK,OCEpDC,GAAO,WAElB,IAAMrG,EAAW2C,cAEX2D,EAAW/D,YAAY0D,IACvBG,EAAQ7D,YAAY4D,IACpBI,EAAUhE,YAAYsD,IAEtBW,EAAS,WACbxG,EFIwB,uCAAM,WAAOA,GAAP,iBAAAT,EAAA,6DAChCS,EAfgC,CAChCrD,KAAM+I,KAa0B,kBAIPe,MjBnBD,kDiBeQ,WAIxBC,EAJwB,QAMhBC,GANgB,sBAOtB,IAAIC,MAAJ,gBAAmBF,EAASV,SAPN,uBAUTU,EAASG,OAVA,OAUxBC,EAVwB,OAW9B9G,EArBsC,CACxCrD,KAAMgJ,GACNjF,QAmB8BoG,IAXE,kDAc5B9G,GAnBsBoG,EAmBM,KAAEtC,QAnBG,CACrCnH,KAAMiJ,GACNlF,QAAS0F,KAGuB,kCALP,IAACA,IAKM,qBAAN,wDEG1B,OAJAxD,qBAAU,WACR4D,MACC,IAGD,gCACE,sCACCJ,EACC,qCACE,yCAAYA,KACXG,GAAW,cAACQ,GAAA,EAAD,CAAkB3B,MAAM,cACpC,wBAAQrH,QAASyI,EAAjB,wBAGFF,EAASjD,KAAI,SAAC2D,GAAD,OACX,kCACE,6BAAKA,EAAIC,SADGD,EAAIpG,W,UChCfsG,GAAsB,+BACtBC,GAAsB,+BACtBC,GAAsB,+BAgBtBC,GAAa,kBAAM,SAACrH,GAC7BA,EAf6B,CAC7BrD,KAAMuK,KAgBNT,MpBTuB,gDoBUpBa,MAAK,SAACZ,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,uBAA0BF,EAASV,SAG3C,OAAOU,EAASG,UAEjBS,MAAK,SAACR,GACL9G,EAtB8B,CAClCrD,KAAMwK,GACNzG,QAoB+BoG,OAE5BS,OAAM,SAAC9K,GAnBY,IAAC2J,EAoBnBzB,QAAQC,IAAInI,GACZuD,GArBmBoG,EAqBQ3J,EAAEqH,QArBC,CAClCnH,KAAMyK,GACN1G,QAAS0F,UCfAoB,GAAuB,SAAC1G,GAAD,OAClCA,EAAM2G,MAAM1B,QAAQC,SAAW9I,GACpBwK,GAAgB,SAAC5G,GAAD,OAAWA,EAAM2G,OACjCE,GAAqB,SAAC7G,GAAD,OAAWA,EAAM2G,MAAM1B,QAAQK,OCEpDwB,GAAU,WACrB,IAAMC,EAAQtF,YAAYmF,IACpBtB,EAAQ7D,YAAYoF,IACpBpB,EAAUhE,YAAYiF,IACtBxH,EAAW2C,cACjBC,qBAAU,WACR4D,MACC,IAEH,IAAMA,EAAS,WACbxG,EAASqH,OAGX,OACE,gCACE,qDACCd,GAAW,cAACuB,GAAA,EAAD,IACX1B,EACC,qCACE,yCAAYA,KACZ,cAACxI,EAAA,EAAD,CAAQG,QAASyI,EAAjB,wBAGF,oCACE,qCAAE,8CAAqB,4BAAIqB,EAAM3B,KAAK6B,iBACtC,qCAAE,8CAAqB,4BAAIF,EAAM3B,KAAK8B,iBACtC,qCAAE,wCAAe,4BAAIH,EAAM3B,KAAK+B,YAHpBJ,EAAM3B,KAAKtF,Q,uBC5BpBsH,GAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAW1C,EAAd,0BAC1B0C,EAAS,cAAC,IAAD,gBAAW1C,IAAY,cAAC,IAAD,CAAUnE,GAAG,Y,cCDlC8G,GAAc,SAAC,GAAD,IAAGD,EAAH,EAAGA,OAAW1C,EAAd,0BACxB0C,EAAgC,cAAC,IAAD,CAAU7G,GAAG,aAApC,cAAC,IAAD,gBAAWmE,K,SCAV4C,GAAe,qBACfC,GAAgB,sBAChBC,GAAc,oBAUdC,GAAW,SAACL,EAAQM,GAAT,MAAwB,CAC9C9L,KAAM2L,GACN5H,QAAS,CACPyH,QAAQ,EACRM,WAAW,KASFC,GAAgB,SAACpJ,EAAOhD,GAAR,OAAiB,SAAC0D,GAC7CA,EAtByB,SAACV,EAAOhD,GAAR,MAAkB,CAC3CK,KAAM0L,GACN3H,QAAS,CACPpB,QACAhD,SAkBOqM,CAAYrJ,EAAOhD,IAC5B,IACEF,EAAMkD,EAAOhD,GACb,MAAOG,GACPkI,QAAQC,IAAI,cACZ5E,GAXwBoG,EAWH3J,EAAE2J,MAXY,CACrCzJ,KAAM4L,GACN7H,QAAS0F,KAFgB,IAACA,ICNfwC,IDqBcC,aAAmB5J,GAAM,SAACyF,GAAD,OAAU,SAAC1E,GAC7D2E,QAAQC,IAAIF,GACRA,GACF1E,EAASwI,QCxBS,WACpB,MAA4BrM,oBAAS,GAArC,mBAAOgM,EAAP,KAAeM,EAAf,KACMzI,EAAW2C,cAEjBC,qBAAU,WASR,OARoBiG,aAAmB5J,GAAM,SAACyF,GAE1C+D,IADE/D,QAQL,IAEH,IAAMoE,EAAW,uCAAG,WAAOxJ,EAAOhD,GAAd,SAAAiD,EAAA,sDAClBS,EAAS0I,GAAcpJ,EAAOhD,IADZ,2CAAH,wDAIXyM,EAAY,uCAAG,WAAOzJ,EAAOhD,GAAd,SAAAiD,EAAA,+EAEXF,EAAOC,EAAOhD,GAFH,sDAIjBqI,QAAQC,IAAR,MAJiB,wDAAH,wDAQlB,OACE,eAAC,IAAD,CAAYrH,UAAU,SAAtB,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAIA,UAAU,QAAd,UACE,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CAAM+D,GAAG,QAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,OAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,uBAEF,+BACE,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,+BAMR,eAAC,IAAD,WACE,cAAC,GAAD,CAAc0H,KAAK,WAAWC,OAAK,EAACd,OAAQA,EAA5C,SACE,cAAC9C,GAAD,CAAcnB,MAAO,SAEvB,cAAC,GAAD,CAAcgF,QAAM,EAACF,KAAK,kBAAkBb,OAAQA,EAApD,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOa,KAAK,QAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAaA,KAAK,SAASb,OAAQA,EAAnC,SACE,cAAC,EAAD,CAAMlM,QAAS6M,MAEjB,cAAC,GAAD,CAAaE,KAAK,UAAUb,OAAQA,EAApC,SACE,cAAC,EAAD,CAAMjM,SAAU6M,MAElB,cAAC,IAAD,UACE,cAAC,EAAD,CAAMC,KAAK,uB,iEC1FfG,GAAc,CAClB9I,MAAO,I,QCAH+I,GAAe,CACnB3F,aAAc,ICFV2F,GAAe,CACjBrE,UAAU,EACVsE,UAAU,EACVlI,KAAM,UACNuD,KAAM,ICCG0E,GAAe,CAC1BlD,KAAM,GACNH,QAAS,CACPK,MAAO,KACPJ,OAAQ9I,ICRNkM,GAAe,CACnBlD,KAAM,GACNH,QAAS,CACPK,MAAO,KACPJ,OAAQ9I,ICJNkM,GAAe,CACnB9J,MAAO,KACPhD,KAAM,KACN6L,QAAQ,EACRM,WAAW,EACX1C,QAAS,CACPK,MAAO,KACPJ,OAAQ9I,ICENoM,GAAgB,CACpBC,IAAK,YACLC,aACAC,UAAW,CAAC,YAGRC,GAAcC,aAAgB,CAClCC,QJV4B,WAA8C,IAA7C9I,EAA4C,uDAApCsI,GAAoC,yCAApBzM,EAAoB,EAApBA,KAAM+D,EAAc,EAAdA,QACzD,OAAQ/D,GACJ,KAAKyH,GACD,OAAO,6BACAtD,GADP,IAEIiE,UAAWjE,EAAMiE,WAGzB,KAAKT,GACD,OAAO,6BACAxD,GADP,IAEIuI,UAAWvI,EAAMuI,WAGzB,KAAKhF,GACD,OAAO,6BACAvD,GADP,IAEIK,KAAMT,IAGd,KAAK6D,GAML,KAAKC,GACD,OAAO,6BACA1D,GADP,IAEI4D,KAAMhE,IAGd,QACI,OAAOI,IItBjBT,MNd0B,WAA6C,IAA5CS,EAA2C,uDAAnCqI,GAAmC,yCAApBxM,EAAoB,EAApBA,KAAM+D,EAAc,EAAdA,QACxD,OAAQ/D,GACN,KAAKiD,EACH,OAAO,6BACFkB,GADL,IAEET,MAAM,GAAD,oBAAMS,EAAMT,OAAZ,CAAmB,CAAEO,GAAG,QAAD,OAAUoB,KAAKC,OAASd,KAAMT,OAG9D,KAAKb,EACH,IAAMgK,EAAW/I,EAAMT,MAAMyJ,QAAO,qBAAGlJ,KAAgBF,KACvD,OAAO,6BACFI,GADL,IAEET,MAAOwJ,IAGX,KAAK/J,EACH,OAAO,6BACFgB,GADL,IAEET,MAAOK,IAGX,QACE,OAAOI,IMPX2C,aLd4B,WAA8C,IAA7C3C,EAA4C,uDAApCsI,GAAoC,yCAApBzM,EAAoB,EAApBA,KAAM+D,EAAc,EAAdA,QAC3D,OAAQ/D,GACN,KAAK4E,EACH,OAAO,6BACFT,GADL,IAEE2C,aAAa,6BACR3C,EAAM2C,cADC,mBAET/C,EAAQoB,OAFC,uBAGJhB,EAAM2C,aAAa/C,EAAQoB,SAAW,IAHlC,CAIR,CACElB,GAAG,WAAD,OAAaoB,KAAKC,OACpBjF,KAAM0D,EAAQ1D,KACd6E,OAAQnB,EAAQmB,cAM1B,KAAKL,EACH,IAAMuI,EAAkBjJ,EAAM2C,aAAa/C,EAAQoB,QAAQgI,QACzD,qBAAGlJ,KAAgBF,EAAQE,MAE7B,OAAO,6BACFE,GADL,IAEE2C,aAAa,6BACR3C,EAAM2C,cADC,mBAET/C,EAAQoB,OAASiI,MAIxB,KAAKlK,EACH,IAAMmK,EAAW,gBAAQlJ,EAAM2C,cAG/B,cAFO3C,EAAM2C,aAAa/C,GAEnB,6BACFI,GADL,IAEE2C,aAAcuG,IAGlB,KAAKvI,EACH,OAAO,6BACFX,GADL,IAEE2C,aAAc/C,IAGlB,QACE,OAAOI,IK/BXgF,KHPyB,WAA8C,IAA7ChF,EAA4C,uDAApCsI,GAAoC,yCAApBzM,EAAoB,EAApBA,KAAM+D,EAAc,EAAdA,QACxD,OAAQ/D,GACN,KAAK+I,GACH,OAAO,6BACF5E,GADL,IAEEiF,QAAS,CACPK,MAAO,KACPJ,OAAQ9I,KAId,KAAKyI,GACH,OAAO,6BACF7E,GADL,IAEEiF,QAAQ,6BACHjF,EAAMiF,SADJ,IAELC,OAAQ9I,IAEVgJ,KAAMxF,IAGV,KAAKkF,GACH,OAAO,6BACF9E,GADL,IAEEiF,QAAS,CACPK,MAAO1F,EACPsF,OAAQ9I,KAId,QACE,OAAO4D,IGvBX2G,MFZ0B,WAA8C,IAA7C3G,EAA4C,uDAApCsI,GAAoC,yCAApBzM,EAAoB,EAApBA,KAAM+D,EAAc,EAAdA,QACzD,OAAQ/D,GACN,KAAKuK,GACH,OAAO,6BACFpG,GADL,IAEEiF,QAAS,CACPK,MAAO,KACPJ,OAAQ9I,KAId,KAAKiK,GACH,OAAO,6BACFrG,GADL,IAEEiF,QAAQ,6BACHjF,EAAMiF,SADJ,IAELC,OAAQ9I,IAEVgJ,KAAMxF,IAGV,KAAK0G,GACH,OAAO,6BACFtG,GADL,IAEEiF,QAAS,CACPK,MAAO1F,EACPsF,OAAQ9I,KAId,QACE,OAAO4D,IElBXmJ,KDVyB,WAA8C,IAA7CnJ,EAA4C,uDAApCsI,GAAoC,yCAApBzM,EAAoB,EAApBA,KAAM+D,EAAc,EAAdA,QACxD,OAAQ/D,GACN,KAAK0L,GACH,OAAO,6BACAvH,GADP,IAEIxB,MAAOwB,EAAMxB,MACbhD,KAAMwE,EAAMxE,OAGlB,KAAKgM,GACH,OAAO,6BACFxH,GADL,IAEEqH,OAAQzH,EAAQyH,OAChBM,UAAW/H,EAAQ+H,YAGvB,KAAKF,GACH,OAAO,6BACFzH,GADL,IAEEiF,QAAS,CACPK,MAAO1F,EACPsF,OAAQ9I,KAId,QACA,OAAO4D,MCbLoJ,GAAmBC,aAAeb,GAAeI,IAEjDU,GAAmBC,OAAOC,sCAAwCC,KAE3DC,GAAQC,aACnBP,GACAE,GAAiBM,aAAgBC,QAGtBC,GAAYC,aAAaL,I,SCTvBM,OAnBf,WAEE,MAA0B3O,mBAAS,SAAnC,mBAAO+H,EAAP,KAAc6G,EAAd,KAEM5G,EAAc9F,uBAAY,WAC9B0M,GAAS,SAACC,GAAD,MAA8B,UAAdA,EAAwB,OAAS,aACzD,IAEH,OACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaI,UAAaA,GAA1B,SACA,cAAC7G,GAAakH,SAAd,CAAuBrO,MAAO,CAACsH,QAAOC,eAAtC,SACE,cAAC,GAAD,WCRO+G,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.94b03be4.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const Home = ({ onLogin, onSignUp }) => {\n  const [login, setLogin] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n\n  const handelLoginChange = (e) => {\n    setLogin(e.target.value);\n  };\n\n  const handelPassChange = (e) => {\n    setPass(e.target.value);\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n\n    setLogin(\"\");\n    setPass(\"\");\n\n    if (!!onLogin) {\n      onLogin(login, pass);\n    } else {\n      onSignUp(login, pass);\n    }\n  };\n\n  return (\n    <>\n      <h3>{!!onLogin ? \"Login\" : \"SignUp\"}</h3>\n      <form onSubmit={handelSubmit}>\n        <input type=\"text\" value={login} onChange={handelLoginChange}></input>\n        <input type=\"password\" value={pass} onChange={handelPassChange}></input>\n        <input type=\"submit\" />\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const MessageList = ({ text }) => <div>{text}</div>;\n","export const AUTHORS = {\n  HUMAN: \"human\",\n  bot: \"bot\",\n};\n\nexport const URL_PUBLIC = \"https://api.spaceflightnewsapi.net/v3/articles\";\n\nexport const REQUEST_STATUS = {\n  IDLE: \"idle\",\n  PENDING: \"penging\",\n  SUCCESS: \"success\",\n  FAILURE: \"failure\",\n};\n\nexport const WEATHER_URL = \"https://goweather.herokuapp.com/weather/Rome\";\n\n","import React from 'react';\nimport { FormControl } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\n\nexport const FormView = ({onChange, inputRf, text, onClickChange}) => {\n\n  return (\n    <FormControl \n    className=\"MessageListForm\" \n    onSubmit={onChange}>\n      <TextField autoFocus \n      label=\"Message\"\n      inputRef={inputRf} \n      className=\"MessageListInput\" \n      value={text}\n      onChange={onClickChange}/>\n      <Button \n      type=\"submit\"\n      variant=\"outlined\" \n      size=\"small\" \n      onClick={onChange} \n      className=\"MessageListBTN\"\n      >ADD</Button>\n    </FormControl>\n  )\n}","import React from \"react\";\nimport { useState, useRef, useCallback } from \"react\";\nimport { FormView } from \"./FormView\";\n\nexport const FormContainer = ({ onSubmit }) => {\n  const inputRef = useRef(null);\n\n  const [messageAdd, setMessageAdd] = useState(\"\");\n\n  const handelChange = useCallback((event) => {\n    setMessageAdd(event.target.value);\n  }, []);\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(messageAdd);\n\n    inputRef.current.focus();\n  };\n\n  return (\n    <FormView\n      onChange={handelSubmit}\n      inputRf={inputRef}\n      text={messageAdd.text}\n      onClickChange={handelChange}\n    />\n  );\n};\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut as firbaseSignOut,\n  getAuth,\n} from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBRGUA39gjO23_QpPKBd6hyH5c0fIwqmok\",\n  authDomain: \"chat-with-react-fccaa.firebaseapp.com\",\n  databaseURL:\n    \"https://chat-with-react-fccaa-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"chat-with-react-fccaa\",\n  storageBucket: \"chat-with-react-fccaa.appspot.com\",\n  messagingSenderId: \"319658789973\",\n  appId: \"1:319658789973:web:49ed28d56c0a3f8b3e18dc\",\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\nexport const auth = getAuth();\nexport const db = getDatabase();\n\nexport const signUp = async (email, pass) => {\n  await createUserWithEmailAndPassword(auth, email, pass);\n};\n\nexport const login = async (email, pass) => {\n  await signInWithEmailAndPassword(auth, email, pass);\n};\n\nexport const signOut = async () => {\n  await firbaseSignOut(auth);\n};\n","import { onValue, ref, remove, set } from \"@firebase/database\";\nimport { db } from \"../../services/firebase\";\n\nexport const ADD_CHAT = \"CHATS::ADD_CHAT\";\nexport const DELETE_CHAT = \"CHATS::DELETE_CHAT\";\nexport const SET_CHAT = \"CHATS::SET_CHAT\";\n\nexport const addChat = (name) => ({\n  type: ADD_CHAT,\n  payload: name,\n});\n\nexport const deleteChat = (id) => ({\n  type: DELETE_CHAT,\n  payload: id,\n});\n\nexport const setChat = (items) => ({\n  type: SET_CHAT,\n  payload: items,\n});\n\nexport const initChats = () => (dispatch) => {\n  const itemsDbRef = ref(db, \"items\");\n  onValue(itemsDbRef, (snapshot) => {\n    const data = snapshot.val();\n    dispatch(setChat(Object.values(data || {})));\n  });\n};\n\nexport const addChatFb = (name) => () => {\n  const newId = `chats-${Date.now()}`;\n\n  const itemsDbRef = ref(db, `items/${newId}`);\n\n  set(itemsDbRef, {\n    id: newId,\n    name,\n  });\n};\n\nexport const deleteChats = () => (dispatch) => {\n  const itemsDbRef = ref(db, \"items\");\n  onValue(itemsDbRef, (snapshot) => {\n    const data = snapshot.val();\n    dispatch(deleteChat(Object.values(data || {})));\n  });\n};\n\nexport const deleteChatFb = (id) => () => {\n  const itemsDbRef = ref(db, `items/${id}`);\n\n  remove(itemsDbRef, {\n    id,\n  });\n};\n","export const selectChats = (state) => state.items.items;\nexport const selectChatsLength = (state) => state.items.items.length;\nexport const selectFerstChatId = (state) => state.items.items?.[0].id;\nexport const selectIfChatExists = (id) => (state) =>\n  !!state.items.items.find((item) => id === item.id);\n","import { ListItem } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport \"./style.css\";\n\nexport const ChatItemView = ({ id, name, onDelete }) => {\n  return (\n    <ListItem className=\"ListItem\">\n      <Link to={`/chats/${id}`}>{name}</Link>\n      <DeleteIcon className=\"ListBTN\" onClick={onDelete} />\n    </ListItem>\n  );\n};\n","import { onValue, ref, remove, set } from \"@firebase/database\";\nimport { AUTHORS } from \"../../components/utils/constans\";\nimport { db } from \"../../services/firebase\";\n\nexport const ADD_MESSAGE = \"MESSAGESS::ADD_MESSAGE\";\nexport const DELETE_MESSAGE = \"MESSAGESS::DELETE_MESSAGE\";\nexport const SET_MESSAGES = \"MESSAGESS::SET_MESSAGES\";\n\nexport const addMessage = (itemId, text, author) => ({\n  type: ADD_MESSAGE,\n  payload: {\n    itemId,\n    text,\n    author,\n  },\n});\n\nexport const deleteMessage = (itemId, id) => ({\n  type: DELETE_MESSAGE,\n  payload: {\n    itemId,\n    id,\n  },\n});\n\nexport const setMessagesList = (messages) => ({\n  type: SET_MESSAGES,\n  payload: messages,\n});\n\nlet timer;\nexport const addMessageWithReplay = (itemId, text, author) => (dispatch) => {\n  dispatch(addMessage(itemId, text, author));\n\n  if (author === AUTHORS.HUMAN) {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      dispatch(addMessage(itemId, \"Hello\", AUTHORS.bot));\n    }, 2000);\n  }\n};\n\nexport const initMessages = () => (dispatch) => {\n  const messagesListDbRef = ref(db, \"messagesList\");\n  onValue(messagesListDbRef, (snapshot) => {\n    const data = snapshot.val();\n    dispatch(setMessagesList(data || {}));\n  });\n};\n\nexport const addMessageFb = (text, author, itemId) => (dispatch) => {\n  const newId = `messagesList-${Date.now()}`;\n  const messagesListDbRef = ref(db, `messagesList/${itemId}/${newId}`);\n  set(messagesListDbRef, {\n    author,\n    text,\n    id: newId,\n  });\n};\n\nexport const deleteMessageFb = (itemId) => () => {\n  const itemsDbRef = ref(db, `messagesList/${itemId}`);\n\n  remove(itemsDbRef, {\n    itemId,\n  });\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport {\n  deleteChatFb,\n  deleteChats,\n} from \"../../store/chats/actions\";\nimport {\n  selectChatsLength,\n  selectFerstChatId,\n} from \"../../store/chats/selectors\";\n\nimport \"./style.css\";\nimport { ChatItemView } from \"./ChatItenView\";\nimport { deleteMessageFb } from \"../../store/messages/actions\";\n\nexport const ChatItemContainer = ({ item }) => {\n  const { itemId } = useParams();\n  const ferstChatId = useSelector(selectFerstChatId);\n  const chatsLength = useSelector(selectChatsLength);\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(deleteChats());\n  }, []);\n\n  const handelDelete = () => {\n    dispatch(deleteChatFb(item.id));\n    dispatch(deleteMessageFb(itemId));\n\n    if (itemId !== item.id) {\n      return;\n    }\n\n    if (!chatsLength === 1) {\n      history.push(`/chats/${ferstChatId}`);\n    } else {\n      history.push(`/chats`);\n    }\n  };\n\n  return <ChatItemView name={item.name} id={item.id} onDelete={handelDelete} />;\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useDispatch } from \"react-redux\";\nimport { addChatFb } from \"../../store/chats/actions\";\n\nexport const FormAddChat = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  const handelChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(addChatFb(value));\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <TextField\n        autoFocus\n        value={value}\n        label=\"New chat\"\n        type=\"text\"\n        onChange={handelChange}\n      />\n      <Button variant=\"outlined\" disabled={!value} type=\"submit\">\n        Add Chat\n      </Button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { List } from \"@material-ui/core\";\nimport { ChatItemContainer } from \"../ChatItem/ChatItemContainer\";\nimport { useSelector } from \"react-redux\";\nimport { selectChats } from \"../../store/chats/selectors\";\nimport { FormAddChat } from \"../FormAddChat\";\n\nexport const ChartList = ({ itemId }) => {\n  const items = useSelector(selectChats);\n\n  return (\n    <>\n      <List>\n        {(items || []).map((item, i) => (\n          <>\n            <ChatItemContainer\n              item={item}\n              itemId={itemId}\n              key={item.id}\n              id={item.id}\n            />\n          </>\n        ))}\n        <FormAddChat />\n      </List>\n    </>\n  );\n};\n","import { useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MessageList } from \"../MessageList\";\nimport \"../MessageList/MessageList.css\";\nimport \"../Message.css\";\n\nimport { AUTHORS } from \"../utils/constans\";\nimport { FormContainer } from \"../Form/FormContainer\";\nimport { ChartList } from \"../ChstList\";\n\nimport { initChats } from \"../../store/chats/actions\";\nimport { addMessageFb, initMessages } from \"../../store/messages/actions\";\nimport { remove } from \"@firebase/database\";\n\nfunction Chats() {\n  const { itemId } = useParams();\n  const dispatch = useDispatch();\n\n  const messagesList = useSelector((state) => state.messagesList.messagesList);\n\n  const chatExists = useSelector(\n    (id) => (state) => !!state.items.items.find((item) => id === item.id)\n  );\n\n  useEffect(() => {\n    dispatch(initChats());\n    dispatch(initMessages());\n  }, []);\n\n  const sendMessage = useCallback(\n    (text, author) => {\n      dispatch(addMessageFb(text, author, itemId));\n      if (itemId == null) {\n        remove(addMessageFb());\n      }\n    },\n    [itemId]\n  );\n\n  const handelAddMessage = useCallback(\n    (text) => {\n      sendMessage(text, AUTHORS.HUMAN);\n    },\n    [sendMessage]\n  );\n\n  return (\n    <div className=\"MessageList\">\n      <ChartList itemId={itemId} />\n      {!!itemId && chatExists && (\n        <>\n          <FormContainer onSubmit={handelAddMessage} />\n          {(Object.values(messagesList[itemId] || {}) || []).map((message) => (\n            <MessageList key={message.id} text={message.text} />\n          ))}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Chats;\n","import { useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ThemeContext } from \"../utils/ThemeContext\";\nimport { onLogout } from \"../../store/profile/action\";\nimport { ProfileTop } from \"../ProfileTop\";\nimport { ProfileForm } from \"../ProfileForm\";\n\nimport \"./Profile.css\"\n\nconst withContext = (Component) => {\n  return (...props) => {\n    const theme = useContext(ThemeContext);\n\n    return <Component {...props} theme={theme} />;\n  };\n};\n\nexport const Profile = ({ theme }) => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(onLogout);\n  };\n\n  return (\n    <>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\"\n      />\n\n      <button className=\"Logout\" onClick={handleLogout}>Logout</button>\n\n\n      <ProfileTop theme={theme} />\n\n      <img className=\"animate__zoomIn\" src=\"https://picsum.photos/300\"/>\n    </>\n  );\n};\n\nexport const ThemeProfile = withContext(Profile);\n","import React from 'react';\n\nexport const ThemeContext = React.createContext({theme:'light', changeTheme: () => {} });\n","import { onValue, ref, set } from \"@firebase/database\";\nimport { db } from \"../../services/firebase\";\nimport { signOut } from \"../../services/firebase\";\n\nexport const TOOGLE_SHOW_NAME = \"PROFILE::TOGGLE_SHOW_NAME\";\nexport const CHANGE_NAME = \"PROFILE::CHANGE_NAME\";\nexport const CHECK_BOX = \"PROFILE::CHECK_BOX\";\nexport const ON_AUTH = \"PROFILE::ON_AUTH\";\nexport const ON_LOGOUT = \"PROFILE::ON_LOGOUT\";\n\n\nexport const toggleShowName = {\n  type: TOOGLE_SHOW_NAME,\n};\n\nexport const checkBoxOff = {\n  type: CHECK_BOX,\n};\n\nexport const changeName = (name) => ({\n  type: CHANGE_NAME,\n  payload: name,\n});\n\nexport const onAuth = (user) => ({\n  type: ON_AUTH,\n  payload: user,\n});\n\n\nexport const onLogout = (user) => {\n  if(user) {\n    signOut();\n  } else {\n    console.log(\"null\");\n    //TODO setError();\n  }\n};\n\n\nexport const userChange = () => (dispatch) => {\n  const userDbRef = ref(db, \"user\");\n  onValue(userDbRef, (snapshot) => {\n    const data = snapshot.val();\n    dispatch(onAuth(Object.values(data.username || \"\")));\n  });\n};\n\nexport const userNameChange = (value) => (dispatch) => {\n    set(ref(db, \"user\"), {\n        username: value,\n      });\n};","export const selectProfileName = (state) => state.name;\nexport const selectProfileCheckBox = (state) => state.checkBox;\nexport const selectProfileShowName = (state) => state.showName;\n\nexport const selectProfileAuth = (state) => state.authed;\nexport const selectProfileSetAuth = (state) => state.setAuthed;\n\n\n\n","import { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  selectProfileName,\n  selectProfileShowName,\n} from \"../../store/profile/selectors\";\nimport { ThemeContext } from \"../utils/ThemeContext\";\n\nexport const ProfileTop = ({ onLogaut }) => {\n  const showName = useSelector(selectProfileShowName);\n  const name = useSelector(selectProfileName);\n  const theme = useContext(ThemeContext);\n\n  return (\n    <>\n      <h2 style={{ color: theme.theme === \"light\" ? \"black\" : \"blue\" }}>\n        This is page of profile\n      </h2>\n      {showName && <div>{name}</div>}\n    </>\n  );\n};\n","import { URL_PUBLIC } from \"../../components/utils/constans\";\n\nexport const GET_ARTICLES_PENDING = \"ARTICLES::GET_PENDING\";\nexport const GET_ARTICLES_SUCCESS = \"ARTICLES::GET_SUCCESS\";\nexport const GET_ARTICLES_FAILURE = \"ARTICLES::GET_FAILURE\";\n\nconst getArticlesPending = () => ({\n  type: GET_ARTICLES_PENDING,\n});\n\nconst GetArticlesSuccess = (articles) => ({\n  type: GET_ARTICLES_SUCCESS,\n  payload: articles,\n});\n\nconst getArticlesFailure = (error) => ({\n  type: GET_ARTICLES_FAILURE,\n  payload: error,\n});\n\n export const getArticles = () => async (dispatch) => {\n  dispatch(getArticlesPending());\n\n  try {\n    const response = await fetch(URL_PUBLIC);\n\n    if (!response.ok) {\n      throw new Error(`error ${response.status}`);\n    }\n\n    const result = await response.json();\n    dispatch(GetArticlesSuccess(result));\n  }\n    catch(e) {\n      dispatch(getArticlesFailure(e.message));\n    }\n};\n","import { REQUEST_STATUS } from \"../../components/utils/constans\";\n\nexport const selectArticlesLoading = (state) =>\n  state.news.request.status === REQUEST_STATUS.PENDING;\nexport const selectArticles = (state) => state.news.list;\nexport const selectArticlesError = (state) => state.news.request.error;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CircularProgress } from \"@material-ui/core\";\nimport { getArticles } from \"../../store/articles/actions\";\nimport { selectArticles, selectArticlesError, selectArticlesLoading } from \"../../store/articles/selectors\";\n\nexport const News = () => {\n\n  const dispatch = useDispatch();\n\n  const articles = useSelector(selectArticles);\n  const error = useSelector(selectArticlesError);\n  const loading = useSelector(selectArticlesLoading);\n\n  const reload = () => {\n    dispatch(getArticles());\n  };\n\n  useEffect(() => {\n    reload();\n  }, []);\n\n  return (\n    <div>\n      <h2>News</h2>\n      {error ? (\n        <>\n          <h2>Error: {error}</h2>\n          {loading && <CircularProgress color=\"secondary\" />}\n          <button onClick={reload}>Reflesh</button>\n        </>\n      ) : (\n        articles.map((art) => (\n          <article key={art.id}>\n            <h4>{art.title}</h4>\n          </article>\n        ))\n      )}\n    </div>\n  );\n};\n","import { WEATHER_URL } from \"../../components/utils/constans\";\n\nexport const GET_WEATHER_LOADING = \"WEATHER//GET_WEATHER_LOADING\";\nexport const GET_WEATHER_SUCCESS = \"WEATHER//GET_WEATHER_SUCCESS\";\nexport const GET_WEATHER_FAILURE = \"WEATHER//GET_WEATHER_FAILURE\";\n\nconst getWeatherLoading = () => ({\n    type: GET_WEATHER_LOADING\n});\n\nconst getWeatherSuccess = (temps) => ({\n    type: GET_WEATHER_SUCCESS,\n    payload: temps,\n});\n\nconst getWeatherFeilure = (error) => ({\n    type: GET_WEATHER_FAILURE,\n    payload: error,\n});\n\nexport const getWeather = () => (dispatch) => {\n    dispatch(getWeatherLoading());\n\n    fetch(WEATHER_URL)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Error status ${response.status}`);\n        }\n\n        return response.json();\n      })\n      .then((result) => {\n        dispatch(getWeatherSuccess(result));\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(getWeatherFeilure(e.message));\n      });\n};\n","import { REQUEST_STATUS } from \"../../components/utils/constans\";\n\nexport const selectWeatherLoading = (state) =>\n  state.tempo.request.status === REQUEST_STATUS.PENDING;\nexport const selectWeather = (state) => state.tempo;\nexport const selectWeatherError = (state) => state.tempo.request.error;","import { LinearProgress, Button } from \"@material-ui/core\";\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWeather } from \"../../store/weather/actions\";\nimport { selectWeather, selectWeatherError, selectWeatherLoading } from \"../../store/weather/selector\";\n\nexport const Weather = () => {\n  const temps = useSelector(selectWeather);\n  const error = useSelector(selectWeatherError);\n  const loading = useSelector(selectWeatherLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    reload();\n  }, []);\n\n  const reload = () => {\n    dispatch(getWeather());\n  };\n\n  return (\n    <div>\n      <h1>Weather in the Rome</h1>\n      {loading && <LinearProgress />}\n      {error ? (\n        <>\n          <h3>Error: {error}</h3>\n          <Button onClick={reload}>Refrech</Button>\n        </>\n      ) : (\n        <article key={temps.list.id}>\n          <><h3>Description:</h3><p>{temps.list.description}</p></>\n          <><h3>Temperature:</h3><p>{temps.list.temperature}</p></>\n          <><h3>Wind :</h3><p>{temps.list.wind}</p></>\n        </article>\n      )}\n    </div>\n  );\n};\n","import { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivateRoute = ({ authed, ...props }) =>\n  authed ? <Route {...props} /> : <Redirect to=\"/login\" />;\n","import { Route, Redirect } from \"react-router-dom\";\n\nexport const PublicRoute = ({ authed, ...props }) =>\n  !authed ? <Route {...props} /> : <Redirect to=\"/profile\" />;\n","import { onAuthStateChanged } from \"@firebase/auth\";\nimport { auth, login, signUp } from \"../../services/firebase\";\n\nexport const HANDEL_LOGIN = \"HOME::HANDEL_LOGIN\";\nexport const CHANGE_STATUS = \"HOME::CHANGE_STATUS\";\nexport const ERROR_LOGIN = \"HOME::ERROR_LOGIN\";\n\nexport const handelLodin = (email, pass) => ({\n  type: HANDEL_LOGIN,\n  payload: {\n    email,\n    pass,\n  },\n});\n\nexport const authUser = (authed, setAuthed) => ({\n  type: CHANGE_STATUS,\n  payload: {\n    authed: true,\n    setAuthed: true,\n  },\n});\n\nexport const erroroLogin = (error) => ({\n  type: ERROR_LOGIN,\n  payload: error,\n});\n\nexport const handleLoginFb = (email, pass) => (dispatch) => {\n  dispatch(handelLodin(email, pass));\n  try {\n    login(email, pass);\n  } catch (e) {\n    console.log(\"fallimento\");\n    dispatch(erroroLogin(e.error));\n  }\n};\n\nexport const unsubscribe = onAuthStateChanged(auth, (user) => (dispatch) => {\n  console.log(user);\n  if (user) {\n    dispatch(authUser);\n  }\n  return;\n});\n\nexport const userLogin = (email, pass) => {\n  try {\n    login(email, pass);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const userSignUp = (email, pass) => {\n  try {\n    signUp(email, pass);\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import { HashRouter, BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\n\nimport { Home } from \"../Home\";\nimport Chats from \"../Chats/\";\nimport { ThemeProfile } from \"../Profile\";\n\nimport \"./style.css\";\nimport { News } from \"../News\";\nimport { Weather } from \"../Weather\";\nimport { PrivateRoute } from \"../PrivateRoute\";\nimport { useEffect, useState } from \"react\";\nimport { PublicRoute } from \"../PublicRoute\";\nimport { onAuthStateChanged } from \"@firebase/auth\";\nimport { auth, signUp } from \"../../services/firebase\";\nimport { handleLoginFb } from \"../../store/home/actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport const Routes = () => {\n  const [authed, setAuthed] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setAuthed(true);\n      } else {\n        setAuthed(false);\n      }\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const handleLogin = async (email, pass) => {\n    dispatch(handleLoginFb(email, pass));\n  };\n\n  const handleSignUp = async (email, pass) => {\n    try {\n      await signUp(email, pass);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <HashRouter className=\"router\">\n      <div className=\"nav\">\n        <ul className=\"links\">\n          <li className=\"link\">\n            <Link to=\"chats\">Chats</Link>\n          </li>\n          <li>\n            <Link to=\"profile\">Profile</Link>\n          </li>\n          <li>\n            <Link to=\"news\">News</Link>\n          </li>\n          <li>\n            <Link to=\"weather\">Weather</Link>\n          </li>\n          <ul>\n            <li>\n              <Link to=\"login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"signup\">Sign up</Link>\n            </li>\n          </ul>\n        </ul>\n      </div>\n\n      <Switch>\n        <PrivateRoute path=\"/profile\" exact authed={authed}>\n          <ThemeProfile theme={null} />\n        </PrivateRoute>\n        <PrivateRoute static path=\"/chats/:itemId?\" authed={authed}>\n          <Chats />\n        </PrivateRoute>\n        <Route path=\"/news\">\n          <News />\n        </Route>\n        <Route path=\"/weather\">\n          <Weather />\n        </Route>\n        <PublicRoute path=\"/login\" authed={authed}>\n          <Home onLogin={handleLogin} />\n        </PublicRoute>\n        <PublicRoute path=\"/signup\" authed={authed}>\n          <Home onSignUp={handleSignUp} />\n        </PublicRoute>\n        <Route>\n          <Home path=\"/profile\" />\n          {/* <h3>Error: 404. Router not found. Choose another page</h3> */}\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n","import { ADD_CHAT, DELETE_CHAT, SET_CHAT } from \"./actions\";\n\nconst initalState = {\n  items: [],\n};\n\nexport const chatsReducer = (state = initalState, { type, payload }) => {\n  switch (type) {\n    case ADD_CHAT: {\n      return {\n        ...state,\n        items: [...state.items, { id: `chat-${Date.now()}`, name: payload }],\n      };\n    }\n    case DELETE_CHAT: {\n      const newChats = state.items.filter(({ id }) => id !== payload);\n      return {\n        ...state,\n        items: newChats,\n      };\n    }\n    case SET_CHAT: {\n      return {\n        ...state,\n        items: payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { DELETE_CHAT } from \"../chats/actions\";\nimport { ADD_MESSAGE, DELETE_MESSAGE, SET_MESSAGES } from \"./actions\";\n\nconst initialState = {\n  messagesList: {},\n};\n\nexport const messageReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_MESSAGE: {\n      return {\n        ...state,\n        messagesList: {\n          ...state.messagesList,\n          [payload.itemId]: [\n            ...(state.messagesList[payload.itemId] || []),\n            {\n              id: `message-${Date.now()}`,\n              text: payload.text,\n              author: payload.author,\n            },\n          ],\n        },\n      };\n    }\n    case DELETE_MESSAGE: {\n      const newChatMessages = state.messagesList[payload.itemId].filter(\n        ({ id }) => id !== payload.id\n      );\n      return {\n        ...state,\n        messagesList: {\n          ...state.messagesList,\n          [payload.itemId]: newChatMessages,\n        },\n      };\n    }\n    case DELETE_CHAT: {\n      const newMessages = { ...state.messagesList };\n      delete state.messagesList[payload];\n\n      return {\n        ...state,\n        messagesList: newMessages,\n      };\n    }\n    case SET_MESSAGES: {\n      return {\n        ...state,\n        messagesList: payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { CHANGE_NAME, CHECK_BOX, ON_AUTH, TOOGLE_SHOW_NAME, ON_LOGOUT } from \"./action\";\n\nconst initialState = {\n    showName: false,\n    checkBox: false,\n    name: \"default\",\n    user: '',\n};\n\nexport const profileReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case TOOGLE_SHOW_NAME: {\n            return {\n                ...state,\n                showName: !state.showName\n            };\n        }\n        case CHECK_BOX: {\n            return {\n                ...state,\n                checkBox: !state.checkBox\n            };\n        }\n        case CHANGE_NAME: {\n            return {\n                ...state,\n                name: payload,\n            };\n        }\n        case ON_AUTH: {\n            return {\n                ...state,\n                user: payload,\n            };\n        }\n        case ON_LOGOUT: {\n            return {\n                ...state,\n                user: payload,\n            };\n        }\n        default:\n            return state;\n    }\n};","import { REQUEST_STATUS } from \"../../components/utils/constans\";\nimport {\n  GET_ARTICLES_FAILURE,\n  GET_ARTICLES_PENDING,\n  GET_ARTICLES_SUCCESS,\n} from \"./actions\";\n\nexport const initialState = {\n  list: [],\n  request: {\n    error: null,\n    status: REQUEST_STATUS.IDLE,\n  },\n};\n\nexport const newsReduser = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_ARTICLES_PENDING: {\n      return {\n        ...state,\n        request: {\n          error: null,\n          status: REQUEST_STATUS.PENDING,\n        },\n      };\n    }\n    case GET_ARTICLES_SUCCESS: {\n      return {\n        ...state,\n        request: {\n          ...state.request,\n          status: REQUEST_STATUS.SUCCESS,\n        },\n        list: payload,\n      };\n    }\n    case GET_ARTICLES_FAILURE: {\n      return {\n        ...state,\n        request: {\n          error: payload,\n          status: REQUEST_STATUS.FAILURE,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { REQUEST_STATUS } from \"../../components/utils/constans\";\nimport {GET_WEATHER_LOADING, GET_WEATHER_SUCCESS, GET_WEATHER_FAILURE} from \"./actions\";\n\nconst initialState = {\n  list: [],\n  request: {\n    error: null,\n    status: REQUEST_STATUS.IDLE,\n  },\n};\n\nexport const tempsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_WEATHER_LOADING: {\n      return {\n        ...state,\n        request: {\n          error: null,\n          status: REQUEST_STATUS.PENDING,\n        },\n      };\n    }\n    case GET_WEATHER_SUCCESS: {\n      return {\n        ...state,\n        request: {\n          ...state.request,\n          status: REQUEST_STATUS.SUCCESS,\n        },\n        list: payload,\n      };\n    }\n    case GET_WEATHER_FAILURE: {\n      return {\n        ...state,\n        request: {\n          error: payload,\n          status: REQUEST_STATUS.FAILURE,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { REQUEST_STATUS } from \"../../components/utils/constans\";\nimport { CHANGE_STATUS, ERROR_LOGIN, HANDEL_LOGIN } from \"./actions\";\n\nconst initialState = {\n  email: null,\n  pass: null,\n  authed: false,\n  setAuthed: false,\n  request: {\n    error: null,\n    status: REQUEST_STATUS.IDLE,\n  },\n};\n\nexport const homeReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case HANDEL_LOGIN: {\n      return {\n          ...state,\n          email: state.email,\n          pass: state.pass,\n      };\n  }\n    case CHANGE_STATUS: {\n      return {\n        ...state,\n        authed: payload.authed,\n        setAuthed: payload.setAuthed\n      };\n    }\n    case ERROR_LOGIN: {\n      return {\n        ...state,\n        request: {\n          error: payload,\n          status: REQUEST_STATUS.FAILURE,\n        }\n      }\n    }\n    default: \n    return state\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport { chatsReducer } from \"./chats/reducer\";\nimport { messageReducer } from \"./messages/reducer\";\nimport { profileReducer } from \"./profile/reducer\";\nimport { newsReduser } from \"./articles/reducer\";\nimport { tempsReducer } from \"./weather/reducer\";\nimport { homeReducer } from \"./home/reducer\";\n\nconst persistConfig = {\n  key: \"VeroNiksa\",\n  storage,\n  blacklist: [\"profile\"],\n};\n\nconst rootReducer = combineReducers({\n  profile: profileReducer,\n  items: chatsReducer,\n  messagesList: messageReducer,\n  news: newsReduser,\n  tempo: tempsReducer,\n  home: homeReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport const persistor = persistStore(store);\n","import { useCallback, useState } from 'react';\nimport {Provider} from 'react-redux';\nimport { Routes } from './components/Routes';\nimport './App.css';\nimport { ThemeContext } from './components/utils/ThemeContext';\nimport { persistor, store } from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\n  \nfunction App() {\n\n  const [theme, setTheme] = useState(\"light\");\n\n  const changeTheme = useCallback(() => {\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate persistor = {persistor}>\n      <ThemeContext.Provider value={{theme, changeTheme}}>\n        <Routes />\n      </ThemeContext.Provider>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}